name: Rosa Cluster - Scaling Benchmark

on:
  workflow_dispatch:
    inputs:
      clusterName:
        description: 'Name of the cluster'
        type: string
        default: 'gh-keycloak'
      region:
        description: 'Name of the region where EC2 instances should be installed'
        type: string
        default: 'eu-west-1'
      disableStickySessions:
        description: 'Disable Sticky Sessions'
        type: boolean
        default: true
      numberOfEntitiesInRealm:
        description: 'Number of entities for the scenario in DB'
        type: string
        default: '100000'
      maxWaitEntityCreation:
        description: 'Maximum number of seconds to wait for creation of entities'
        type: string
        default: '900'
      numberOfUsersPerSecond:
        description: 'Initial users per second'
        type: string
        default: '100000'
      numberOfClientsPerSecond:
          description: 'Initial clients per second'
          type: string
          default: '100000'
      skipCreateDeployment:
        description: 'Skip creating Keycloak deployment'
        type: boolean
        default: false
      skipCreateDataset:
        description: 'Skip creating dataset'
        type: boolean
        default: false
      skipDeleteProject:
        description: 'Skip deleting project'
        type: boolean
        default: false

concurrency: cluster_${{ github.event.inputs.clusterName || format('gh-{0}', github.repository_owner) }}

env:
  PROJECT_PREFIX: runner- # same as default
  PROJECT: runner-keycloak

jobs:
  run:
    name: Run Benchmark
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup ROSA CLI
        uses: ./.github/actions/rosa-cli-setup
        with:
          aws-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-default-region: ${{ vars.AWS_DEFAULT_REGION }}
          rosa-token: ${{ secrets.ROSA_TOKEN }}

      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Create AWS EC2 instances
        if: ${{ !inputs.skipCreateDeployment }}
        uses: ./.github/actions/ec2-create-instances
        with:
          region: ${{ inputs.region }}

